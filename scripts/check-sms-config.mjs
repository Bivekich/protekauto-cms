#!/usr/bin/env node

import { readFileSync } from 'fs'
import { join } from 'path'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ .env —Ñ–∞–π–ª–∞
function loadEnv() {
  try {
    const envPath = join(process.cwd(), '.env')
    const envContent = readFileSync(envPath, 'utf8')
    
    envContent.split('\n').forEach(line => {
      line = line.trim()
      if (line && !line.startsWith('#')) {
        const [key, ...valueParts] = line.split('=')
        const value = valueParts.join('=').replace(/^["']|["']$/g, '')
        if (key && value) {
          process.env[key] = value
        }
      }
    })
  } catch (error) {
    console.warn('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å .env —Ñ–∞–π–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è')
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
loadEnv()

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SMS API...')

const requiredSmsVars = [
  'BEELINE_SMS_USER',
  'BEELINE_SMS_PASS'
]

const optionalSmsVars = [
  'BEELINE_SMS_SENDER'
]

let hasErrors = false

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
requiredSmsVars.forEach(varName => {
  if (!process.env[varName]) {
    console.error(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${varName}`)
    hasErrors = true
  } else {
    console.log(`‚úÖ ${varName}: –Ω–∞—Å—Ç—Ä–æ–µ–Ω`)
  }
})

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
optionalSmsVars.forEach(varName => {
  if (!process.env[varName]) {
    console.warn(`‚ö†Ô∏è  –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${varName} (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)`)
  } else {
    console.log(`‚úÖ ${varName}: ${process.env[varName]}`)
  }
})

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ª–æ–≥–∏–Ω–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º)
const smsUser = process.env.BEELINE_SMS_USER
if (smsUser && !/^\d+$/.test(smsUser)) {
  console.error(`‚ùå BEELINE_SMS_USER –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º: ${smsUser}`)
  hasErrors = true
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è
const smsPass = process.env.BEELINE_SMS_PASS
if (smsPass && smsPass.length < 6) {
  console.error(`‚ùå BEELINE_SMS_PASS —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤)`)
  hasErrors = true
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ Docker –æ–∫—Ä—É–∂–µ–Ω–∏–∏
const isDocker = process.env.DOCKER_BUILD === 'true' || 
                process.env.CI === 'true' || 
                !process.env.BEELINE_SMS_USER

if (hasErrors) {
  if (isDocker) {
    console.warn('\n‚ö†Ô∏è  SMS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤–æ –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏')
    console.warn('üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
    process.exit(0) // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É
  } else {
    console.error('\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SMS API')
    process.exit(1)
  }
} else {
  console.log('\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SMS API –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞')
  process.exit(0)
} 